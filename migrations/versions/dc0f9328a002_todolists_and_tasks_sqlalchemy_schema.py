"""todolists and tasks sqlalchemy schema

Revision ID: dc0f9328a002
Revises: 918218055057
Create Date: 2019-08-08 23:44:06.004263

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql


# revision identifiers, used by Alembic.
revision = 'dc0f9328a002'
down_revision = '918218055057'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    role_table = op.create_table('Role',
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.Column('change_owner', mysql.TINYINT(display_width=1), nullable=False),
    sa.Column('delete', mysql.TINYINT(display_width=1), nullable=False),
    sa.Column('change_permissions', mysql.TINYINT(display_width=1), nullable=False),
    sa.Column('change_data', mysql.TINYINT(display_width=1), nullable=False),
    sa.Column('read', mysql.TINYINT(display_width=1), nullable=False),
    sa.PrimaryKeyConstraint('role', name=op.f('pk_Role'))
    )
    op.bulk_insert(
        role_table,
        [
            {
                'role': 'owner',
                'change_owner': 1,
                'delete': 1,
                'change_permissions': 1,
                'change_data': 1,
                'read': 1
            },
            {
                'role': 'admin',
                'change_owner': 0,
                'delete': 0,
                'change_permissions': 0,
                'change_data': 1,
                'read': 1
            },
            {
                'role': 'reader',
                'change_owner': 0,
                'delete': 0,
                'change_permissions': 0,
                'change_data': 0,
                'read': 1
            }
        ]
    )
    op.create_table('TodoList',
    sa.Column('todolist_id', sa.CHAR(length=36), nullable=False),
    sa.Column('label', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('status', sa.Enum('active', 'inactive', name='todoliststatus'), nullable=False),
    sa.Column('priority', sa.Enum('a', 'b', 'c', 'd', 'e', name='priority'), nullable=False),
    sa.Column('created_ts', mysql.DATETIME(), nullable=False),
    sa.PrimaryKeyConstraint('todolist_id', name=op.f('pk_TodoList'))
    )
    op.create_table('TodoListStatusChangeLog',
    sa.Column('todolist_id', sa.CHAR(length=36), nullable=False),
    sa.Column('change_ts', mysql.DATETIME(), nullable=False),
    sa.Column('changed_by', sa.CHAR(length=36), nullable=False),
    sa.Column('status', sa.Enum('active', 'inactive', name='todoliststatus'), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['User.user_id'], name=op.f('fk_TodoListStatusChangeLog_changed_by_User'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['todolist_id'], ['TodoList.todolist_id'], name=op.f('fk_TodoListStatusChangeLog_todolist_id_TodoList'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('todolist_id', 'change_ts', name=op.f('pk_TodoListStatusChangeLog'))
    )
    op.create_table('Task',
    sa.Column('task_id', sa.CHAR(length=36), nullable=False),
    sa.Column('parent_id', sa.CHAR(length=36), nullable=True),
    sa.Column('label', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('todolist_id', sa.CHAR(length=36), nullable=False),
    sa.Column('status', sa.Enum('active', 'done', 'ready', name='nodestatus'), nullable=False),
    sa.Column('priority', sa.Enum('a', 'b', 'c', 'd', 'e', name='priority'), nullable=False),
    sa.Column('created_ts', mysql.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['Task.task_id'], name=op.f('fk_Task_parent_id_Task'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['todolist_id'], ['TodoList.todolist_id'], name=op.f('fk_Task_todolist_id_TodoList'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('task_id', name=op.f('pk_Task'))
    )
    op.create_index(op.f('ix_Task_label'), 'Task', ['label'], unique=False)
    op.create_index(op.f('ix_Task_todolist_id'), 'Task', ['todolist_id'], unique=False)
    op.create_table('TaskStatusChangeLog',
    sa.Column('task_id', sa.CHAR(length=36), nullable=False),
    sa.Column('change_ts', mysql.DATETIME(), nullable=False),
    sa.Column('changed_by', sa.CHAR(length=36), nullable=False),
    sa.Column('status', sa.Enum('active', 'done', 'ready', name='taskstatus'), nullable=False),
    sa.ForeignKeyConstraint(['changed_by'], ['User.user_id'], name=op.f('fk_TaskStatusChangeLog_changed_by_User'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['task_id'], ['Task.task_id'], name=op.f('fk_TaskStatusChangeLog_task_id_Task'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('task_id', 'change_ts', name=op.f('pk_TaskStatusChangeLog'))
    )
    op.create_table('TodoListCreator',
    sa.Column('todolist_id', sa.CHAR(length=36), nullable=False),
    sa.Column('created_by', sa.CHAR(length=36), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['User.user_id'], name=op.f('fk_TodoListCreator_created_by_User'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['todolist_id'], ['TodoList.todolist_id'], name=op.f('fk_TodoListCreator_todolist_id_TodoList'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('todolist_id', name=op.f('pk_TodoListCreator'))
    )
    op.create_table('UserTodoList',
    sa.Column('user_id', sa.CHAR(length=36), nullable=False),
    sa.Column('todolist_id', sa.CHAR(length=36), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['role'], ['Role.role'], name=op.f('fk_UserTodoList_role_Role'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['todolist_id'], ['TodoList.todolist_id'], name=op.f('fk_UserTodoList_todolist_id_TodoList'), ondelete='cascade'),
    sa.ForeignKeyConstraint(['user_id'], ['User.user_id'], name=op.f('fk_UserTodoList_user_id_User'), ondelete='cascade'),
    sa.PrimaryKeyConstraint('user_id', 'todolist_id', name=op.f('pk_UserTodoList'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('UserTodoList')
    op.drop_table('TodoListCreator')
    op.drop_table('TaskStatusChangeLog')
    op.drop_table('Task')
    op.drop_table('TodoListStatusChangeLog')
    op.drop_table('TodoList')
    op.drop_table('Role')
    # ### end Alembic commands ###
